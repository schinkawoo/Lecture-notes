Stochastic protocols:
Benefits of using gossip protocol is for example robustness. If one node drops, it is easy to select another random node among the others. (Symmetry breaking and access control). 
Medium access control (Ethernet): Main functionality is accomplished by listening if link is free before transmitting. Because of the propagation time of the signal, it can still happen that another station starts sending on the same link creating a collision. Because of that we have Collision detection during the communication. After aborting both stations enter random exponential back of phase where they randomly get some sleep time. That stops the scenario where two statins sleep for the same amount of time after the abort, and after they wake up they get in collision once again.
Push sum gossip protocol: Here each node has some value. Goal is to calculate average value for group of nodes using gossip protocol where each node sends information to one of the neighbors. Each node has two values, weight=1 and the start value x. Node collects the messages that are coming from the neighbors then it sums up weight and x values. After that it chooses some random neighbor and sends half of its own weight and half of x. If we wait long enough the value will then be an average of x on each node for weight=1.
Rule based protocols (fraglets): Idea is that packet processing can be described by rules, without the need of a sequential program like we had in omnetpp exercise with messageHandle () function and the different branches in it. With such system we can have different rules that can operate on the same packet. The outcome is in this case usually random, but proportional to the number of matching rules. This approach can be good for load-balancing, for example.
Goal of using this kind of approach is to have random behavior an microscopic level, but still have some deterministic behavior on the global, macroscopic level. 
//Then there is example with check board where on each iteration two chips are chosen. If they are different you create another pair of the same and randomly position it on the rest of the board. At the end in some point of simulation we will have the same number of each type of chips. //
Given their random behavior on microscopic level, stochastic protocols are hard to analyze. For example with Medium access control, it was very hard to implement it on large number of stations and collect the results.
In general, dynamic behavior is put aside or analyzed only after its deployment and here we have a goal to come up with a framework to engineer stochastic protocols, having their dynamic behavior under control from the beginning.
Rule based protocols have set of objects that are passive, and set of rules that are active in changing those objects. If we start treating rules also as objects, where one rule can change the other in some way, then we get reactive system where we have only two objects that react between each other in some way. There are some usual types of reactions that can occur: an object may transform spontaneously into another object without interaction (slide 19), an object can react with other objects and produce one or more objects, objects can regenerate themselves (spontaneously or by reaction with others).  There are lots of examples where this applies (slides 20-23).
Terms in chemistry that are used: Multi-set is the set of elements where each element can occur only once. Reactor or reaction vessel is the container where the reactions take place. Well-stirred vessel is vessel where all molecules have the same probability to collide with each other. 
For every Artificial chemistry reaction we need to define set of species, reaction rules (transformation rules), and reactor algorithm (decides when are the reactions executed, in which order, how reaction is executed).
Chemical networking protocol is artificial chemistry where one specie is one node, with some rules for interaction between them. 
Symbolic chemical computation is process in reactor that lasts until there is no more interaction between molecules in given set that is in reactor. : Molecules usually have symbolic information inside of them (strings, values) that is at the end considered to be the result of computation. Examples: max number, gamma-factorial (N), prime numbers. 
Repetition of fraglets:
Fraglets implement active network architectures, so called programmable network. It is an active network approach where nodes can send executable code (fraglets). New functionality (node behavior) can be added or defined at runtime. The sender can run a protocol without needing the receiver to know anything about it. So in the end, network becomes programmable. We have different function in fraglets: nop, split, fork, match, matchp (catalyst).
Fraglets can be defined as artificial chemistry where species are strings over the symbol alphabet that contains all Fraglets instructions and tags. The set of species is defined by the instruction set where the set of reaction rules      is defined by the interaction possibilities of all strings. We are able to “program” the reaction network at run-time by injecting molecules (strings) into the reactor. The algorithm follows the Law of Mass Action. 
Dynamical chemical computation is a process like symbolic chemical computation with couple of differences: First of all, it newer ends. There are always some molecules that react. Information is encoded by the multiplicity of molecules. We trust the macroscopic state, vector of concentration of all species, not knowing what is happening on microscopic level. In the process of computation concentration is constantly changing and the result of computation ready when system reaches equilibrium, meaning that concentration settles around some value. 
In chemistry, the Law of Mass Action defines the rate of reactions. On the level of individual molecules: The more molecules we have in reactor, more frequently they collide. On the macroscopic level: The higher the concentration of the reactants of a reaction, the more often this reaction occurs. For Chemical Networking Protocols: The higher the multiplicity of molecules in a node, the faster that node sends molecules to its neighbors. So, the reaction rate is proportional to the concentration of its reactants. Example is on the slide 43. If we have symbolic reaction where at the start we have some number of molecules that can react, with time reaction is going to slow down until there will not be more reactants. In dynamical, new molecules are produced in each reaction. We can then calculate dynamics of concentration by Ordinary Differential Equations like on slide 45.
Usually we are not interested in dynamics of concentration, but we are in equilibrium. We get equilibrium when concentrations stop changing. Main goal of Chemical Networking Protocols is to design reaction networks that have equilibrium (stable fixed point) and that in that point we can extract results of the computation. 
Gillespie’s algorithm:
Here we compute when and which reactions are going to happen. 
As we know reactions with a higher number of reactants are more frequently executed. So we calculate propensity or weight of all reactions and then the probability that reaction occurs in the next small time. Weight can be calculated as low of mass action on microscopic level and probability is weight divided with total weight. Idea is that algorithm calculates probabilities and just randomly picks one reaction based on those probabilities. We also know that higher the concentration shorter will be the interval when next reaction occurs. So we calculate the sum of all reaction propensities and the next interval is invers of this value. At the end we choose next interval with exponential distribution of this next interval.
Proportional Scaling: 59
Square Root: 60
Chemical disperser protocol:
The problem here is the same as for Push-Sum, to compute the average value in a distributed way. We want to create equilibrium over the number of molecules in the nodes. So we create only one reaction that picks one molecule and gives it to the neighbor. If we don’t execute this algorithm with Gillespie’s algorithm, each node will do their reaction as fast as possible. If we start with all the molecules on one node, at the end node with greatest number of neighbors will have all the molecules. If we schedule the system with low of mass action we will have desired behavior. We start again with one node having all the molecules. Concentration of molecules is high and rate is also high but as the molecules pass to other nodes, their concentration and reaction rate rise, and rate of the first node drops. At the end we all the reaction in all the directions are the same we have equilibrium. Since all the molecules are conserved, we can just read the number of molecules on some node to get the average number. There is example in fraglets on page 67.
Properties:
Values are not represented by symbolic numbers but by the concentration of molecules inside of nodes.  Information is not exchanged inside packets but by the packet rate. Advantage that we get is higher robustness meaning that packet loss only marginally disturbs the system. On the other hand we have higher message complexity. Instead of just sending our value in one message, we send the packets with some packet rate that corresponds to that value. We can also plan and analyze the dynamics of the system before we even create it.
There is a simple guide for analysis of the dynamic behavior of the distributed algorithm in Fraglets:
-We draw the reaction network ignoring the structure of the moleculs
-Write down the differential equations
- Find the equilibrium
- Show that the equilibrium is stable
Example on slides: 72-75
Algorithm for designing the chemical protocols is never strait forward. It needs lots of intuition, experience, and knowledge of execution environment. General recipe doesn’t exist. In contrast to most traditional approaches, design dynamics is developed first, and functional aspects are added later. There is use of conservation laws where input to some system must be equal to the output, but only at equilibrium. There is also use of design patterns. Remote Concentration Mirroring, Neighbor Quantification, Anycast.
